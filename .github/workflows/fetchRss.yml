name: 抓取並上傳 RSS

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/*'
      - 'code/*'
      # - '*.rss'
      - '*'
      - '**'
  # schedule:
    # - cron: '*/5 * * * *'  # 每隔 5 分鐘運行一次
    # - cron: '*/10 * * * *'  # 每隔 10 分鐘運行一次
    # - cron: '*/15 * * * *'  # 每隔 15 分鐘運行一次
    # - cron: '*/20 * * * *'  # 每隔 20 分鐘運行一次
    # - cron: '*/25 * * * *'  # 每隔 25 分鐘運行一次
    # - cron: '*/30 * * * *'  # 每隔 30 分鐘運行一次

jobs:
  deploy:
    runs-on: ubuntu-24.04
    # runs-on: ubuntu-latest

    steps:
    - name: 檢出代碼
      uses: actions/checkout@v4

    - name: 檢出代碼 2
      run: |
        for i in {1..10}; do git pull && break; done

    - name: Install and configure Cloudflare WARP
      run: |
        for i in {1..10}; do curl -v https://1.1.1.1/cdn-cgi/trace && break; done
        for i in {1..10}; do curl https://pkg.cloudflareclient.com/pubkey.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloudflare-warp-archive-keyring.gpg && break; done
        for i in {1..10}; do echo "deb [arch=amd64 signed-by=/usr/share/keyrings/cloudflare-warp-archive-keyring.gpg] https://pkg.cloudflareclient.com/ $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/cloudflare-client.list && break; done
        for i in {1..10}; do sudo apt update -y && break; done
        for i in {1..10}; do sudo apt install -y cloudflare-warp && break; done
        for i in {1..10}; do warp-cli --accept-tos registration new && break; done
        for i in {1..10}; do warp-cli --accept-tos mode warp+doh && break; done
        for i in {1..10}; do warp-cli --accept-tos tunnel ip add 127.0.0.1 && break; done
        for i in {1..10}; do warp-cli --accept-tos tunnel host add localhost && break; done
        for i in {1..10}; do warp-cli --accept-tos connect && break; done
        for i in {1..10}; do curl -v https://1.1.1.1/cdn-cgi/trace && break; done
        while ! curl -s https://1.1.1.1/cdn-cgi/trace | grep -q "warp=on"; do echo "warp is off, retrying..."; sleep 1; done; echo "warp is on"

    - name: 檢出代碼 3
      run: |
        for i in {1..10}; do git pull && break; done

    - name: 安裝依賴
      run: |
        for i in {1..10}; do sudo apt update -y && { echo "APT updated successfully"; break; } || echo "APT update attempt $i failed, retrying..."; done
        for i in {1..10}; do sudo apt install python3 python3-full redis-server pipx -y && { echo "Packages installed successfully"; break; } || echo "Package installation attempt $i failed, retrying..."; done
        for i in {1..10}; do pipx install --upgrade feedgen bs4 tqdm aiofiles requests_cache qh3 urllib3.future niquests niquests[speedups] niquests[socks] psutil redis redis[hiredis] && { echo "Python packages installed successfully"; break; } || echo "Python package installation attempt $i failed, retrying..."; done
        for i in {1..10}; do sudo systemctl status redis && { echo "Redis service is active"; break; } || echo "Redis service status check attempt $i failed, retrying..."; done
        for i in {1..10}; do sudo systemctl enable redis && { echo "Redis service enabled successfully"; break; } || echo "Redis enable attempt $i failed, retrying..."; done
        for i in {1..10}; do sudo systemctl start redis && { echo "Redis service started successfully"; break; } || echo "Redis start attempt $i failed, retrying..."; done
        for i in {1..10}; do sudo systemctl status redis && { echo "Redis service is active"; break; } || echo "Redis service status check attempt $i failed, retrying..."; done

    - name: 執行 Python 腳本
      run: |
        python3 code/rthk.py

    - name: Redis 狀態
      run: |
        for i in {1..10}; do sudo systemctl status redis && break; done

    - name: 上傳 RSS 文件
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "github-actions"
        git add *.rss
        git commit -m "Upload RSS file"
        git push origin main
